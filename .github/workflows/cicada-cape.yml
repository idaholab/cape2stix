name: CICADA-CAPE

on: push

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
    #-----------------------setup steps
      - name: checkout
        uses: actions/checkout@v3
      - name: python-setup
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: poetry-install
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: load-venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #-----------------------depends and project install
      - name: INSTALL-DEPENDENCIES
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: INSTALL-PROJECT
        run: poetry install --no-interaction

  main_test:
    needs: init
    runs-on: ubuntu-latest
    steps:
    #-----------------------setup steps
      - name: checkout
        uses: actions/checkout@v3
      - name: python-setup
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: poetry-install
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: load-venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #------------------------run main test
      - name: MAIN-TEST
        run: |
          poetry run $INTERPRETER -m unittest cape2stix.tests.core
          poetry run $INTERPRETER -m unittest cape2stix.tests.validator_test

  bandit:
    needs: init
    runs-on: ubuntu-latest
    steps:
    #-----------------------setup steps
      - name: checkout
        uses: actions/checkout@v3
      - name: python-setup
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: poetry-install
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: load-venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #------------------------run bandit
      - name: RUN-BANDIT
        run: |
          source .venv/bin/activate
          poetry run bandit -r cape2stix todb capesubd capeplugin ama_deploy *.py


