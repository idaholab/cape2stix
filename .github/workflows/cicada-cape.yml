name: CICADA-CAPE

on: push

env:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PY_TO_SCAN: "cape2stix todb capesubd capeplugin ama_deploy *.py"
  INTERPRETER: "python3"

jobs:
#------------------------------------------------
#                     INIT
#------------------------------------------------  
  init:
    runs-on: ubuntu-latest
    steps:
    #-----------------------setup steps
      - name: checkout
        uses: actions/checkout@v3
      - name: python-setup
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: poetry-install
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: load-venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #-----------------------depends and project install
      - name: INSTALL-DEPENDENCIES
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: INSTALL-PROJECT
        run: poetry install --no-interaction
#------------------------------------------------
#                  MAIN_TEST
#------------------------------------------------  
  main_test:
    needs: init
    runs-on: ubuntu-latest
    steps:
    #-----------------------setup steps
      - name: checkout
        uses: actions/checkout@v3
      - name: python-setup
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: poetry-install
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: load-venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #------------------------run main test
      - name: MAIN_TEST
        run: |
          source .venv/bin/activate #NOTE: unsure if this is necessary
          poetry run $INTERPRETER -m unittest cape2stix.tests.core
          poetry run $INTERPRETER -m unittest cape2stix.tests.validator_test
#------------------------------------------------
#                  BANDIT
#------------------------------------------------  
  bandit:
    needs: init
    runs-on: ubuntu-latest
    steps:
    #-----------------------setup steps
      - name: checkout
        uses: actions/checkout@v3
      - name: python-setup
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: poetry-install
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: load-venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #------------------------run bandit
      - name: BANDIT
        run: |
          source .venv/bin/activate
          poetry run bandit -r cape2stix todb capesubd capeplugin ama_deploy *.py
#------------------------------------------------
#                  PAGES
#------------------------------------------------  
  pages:
  needs: init
  runs-on: ubuntu-latest
  steps:
  #-----------------------setup steps
    - name: checkout
      uses: actions/checkout@v3
    - name: python-setup
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: poetry-install
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: load-venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
  #------------------------run pages
    - name: PAGES
      run: |
        cd docs
        poetry run sphinx-apidoc -o capesubd ../capesubd  
        poetry run sphinx-apidoc -o cape2stix ../cape2stix 
        poetry run make html
        mv _build/html/ ../public/
  #------------------------archive
    - name: archive
      uses: actions/upload-artifact@v3
      with:
        name: public
        path: public/
#------------------------------------------------
#                  DOCKER
#------------------------------------------------  
build_docker:
  runs-on: docker:20-dind
  steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: BUILD_DOCKER
      run: docker build -t cape2stix .